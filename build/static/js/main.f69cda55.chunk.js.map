{"version":3,"sources":["Components/AddToList.tsx","Components/Lists.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddToList","setPeople","people","useState","name","age","note","img","input","setInput","handleChange","e","target","value","className","type","placeholder","onChange","onClick","parseInt","List","map","person","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAqFeA,EA7EqB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAE7C,EAA0BC,mBAAS,CAC/BC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,IAAK,KAJT,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAClBF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,UAyBlC,OACI,sBAAKC,UAAU,YAAf,UACI,uBACIC,KAAK,OACLC,YAAY,OACZF,UAAU,kBACVD,MAAOL,EAAMJ,KACba,SAAUP,EACVN,KAAK,SAET,uBACIW,KAAK,OACLC,YAAY,MACZF,UAAU,kBACVD,MAAOL,EAAMH,IACbY,SAAUP,EACVN,KAAK,QAET,uBACIW,KAAK,OACLC,YAAY,YACZF,UAAU,kBACVD,MAAOL,EAAMD,IACbU,SAAUP,EACVN,KAAK,QAET,0BACIY,YAAY,QACZF,UAAU,kBACVD,MAAOL,EAAMF,KACbW,SAAUP,EACVN,KAAK,SAET,wBAAQU,UAAU,gBAAgBI,QAtDtB,WACZV,EAAMJ,MAASI,EAAMH,MAEzBJ,EAAU,GAAD,mBACFC,GADE,CAEL,CACIE,KAAMI,EAAMJ,KACZC,IAAKc,SAASX,EAAMH,KACpBE,IAAKC,EAAMD,IACXD,KAAME,EAAMF,SAIpBG,EAAS,CACLL,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,IAAK,OAqCL,6BCjDGa,EAzBgB,SAAC,GAAc,IAAblB,EAAY,EAAZA,OAkB7B,OACE,6BAfOA,EAAOmB,KAAI,SAACC,GACjB,OACE,qBAAIR,UAAU,OAAd,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,WAAWS,IAAKD,EAAOf,MACtC,6BAAKe,EAAOlB,UAEd,8BAAIkB,EAAOjB,IAAX,gBACA,mBAAGS,UAAU,YAAb,SAA0BQ,EAAOhB,gBCuB9BkB,MAxBf,WAGE,MAA4BrB,mBAA2B,CACrD,CACEC,KAAM,cACNG,IAAK,2GACLF,IAAK,GACLC,KAAM,0CALV,mBAAOJ,EAAP,KAAeD,EAAf,KAYA,OACE,sBAAKa,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,CAAMZ,OAAQA,IACd,cAAC,EAAD,CAAWA,OAAQA,EAAQD,UAAWA,QCpB7BwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f69cda55.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { IState as Props } from \"../App\";\r\n\r\ninterface IProps {\r\n    setPeople: React.Dispatch<React.SetStateAction<Props[\"people\"]>>\r\n    people: Props[\"people\"]\r\n}\r\n\r\nconst AddToList: React.FC<IProps> = ({setPeople, people}) => {\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        age: \"\",\r\n        note: \"\",\r\n        img: \"\"\r\n    }) \r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleClick = (): void => {\r\n        if(!input.name || !input.age) return\r\n\r\n        setPeople([\r\n            ...people,\r\n            {\r\n                name: input.name,\r\n                age: parseInt(input.age),\r\n                img: input.img,\r\n                note: input.note\r\n            }\r\n        ]);\r\n\r\n        setInput({\r\n            name: \"\",\r\n            age: \"\",\r\n            note: \"\",\r\n            img: \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"AddToList\">\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                className=\"AddToList-input\"\r\n                value={input.name}\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n            />\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Age\"\r\n                className=\"AddToList-input\"\r\n                value={input.age}\r\n                onChange={handleChange}\r\n                name=\"age\"\r\n            />\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Image Url\"\r\n                className=\"AddToList-input\"\r\n                value={input.img}\r\n                onChange={handleChange}\r\n                name=\"img\"\r\n            />\r\n            <textarea \r\n                placeholder=\"Notes\"\r\n                className=\"AddToList-input\"\r\n                value={input.note}\r\n                onChange={handleChange}\r\n                name=\"note\"\r\n            />\r\n            <button className=\"AddToList-btn\" onClick={handleClick}>\r\n                Add to List\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToList;","import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { IState as IProps} from \"../App\"\r\n\r\nconst List: React.FC<IProps> = ({people}) => {\r\n  //we're trying to get the program to return the jsx components rather than having the jsx generated in the app.tsx file\r\n\r\n    const renderList = (): JSX.Element[] => {\r\n      return people.map((person) => {\r\n        return (\r\n          <li className=\"List\">\r\n            <div className=\"List-header\">\r\n              <img className=\"List-img\" src={person.img} />\r\n              <h2>{person.name}</h2>\r\n            </div>\r\n            <p>{person.age} years old</p>\r\n            <p className=\"List-note\">{person.note}</p>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n    // so it looks like you can have functions local to this const\r\n    return (\r\n      <ul>\r\n        {renderList()}\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n//TODO: https://youtu.be/jrKcJxF0lAU?t=2438","import React, {useState} from 'react';\n// import logo from './logo.svg'; // this is how the logo came into view\nimport './App.css';\nimport AddToList from './Components/AddToList';\nimport List from './Components/Lists';\n\nexport interface IState{\n  people:{\n    img: string\n    name: string\n    age: number\n    note?: string\n  }[]\n}\n\nfunction App() {\n  // here I am declaring an object. \n\n  const [people, setPeople] = useState<IState[\"people\"]>([\n    {\n      name: \"Kobe Byrant\",\n      img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCuJs_eD_YYejFPtXMkp_WhRW41Xz0DSlxtmImgsOq5hUMjDJ1\",\n      age: 36,\n      note: \"Allergic to staying on the same team\"\n    }\n  ])\n\n  // people.map(person => {\n  //   person.name\n  // })\n  return (\n    <div className=\"App\">\n      <h1>People Invited to my Party</h1>\n      <List people={people}/>\n      <AddToList people={people} setPeople={setPeople}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}