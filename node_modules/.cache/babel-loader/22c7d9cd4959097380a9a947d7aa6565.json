{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var List=function List(_ref){var people=_ref.people;//we're trying to get the program to return the jsx components rather than having the jsx generated in the app.tsx file\nvar renderList=function renderList(){return people.map(function(person){return/*#__PURE__*/_jsxs(\"li\",{className:\"List\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"List-header\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"List-img\",src:person.img}),/*#__PURE__*/_jsx(\"h2\",{children:person.name})]}),/*#__PURE__*/_jsxs(\"p\",{children:[person.age,\" years old\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"List-note\",children:person.note})]});});};// so it looks like you can have functions local to this const\nreturn/*#__PURE__*/_jsx(\"ul\",{children:renderList()});};export default List;//TODO: https://youtu.be/jrKcJxF0lAU?t=2438","map":{"version":3,"sources":["C:/repos/TypeScript/MyFirstWebsite/src/Components/Lists.tsx"],"names":["React","List","people","renderList","map","person","img","name","age","note"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAGA,GAAMC,CAAAA,IAAsB,CAAG,QAAzBA,CAAAA,IAAyB,MAAc,IAAZC,CAAAA,MAAY,MAAZA,MAAY,CAC3C;AAEE,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAqB,CACtC,MAAOD,CAAAA,MAAM,CAACE,GAAP,CAAW,SAACC,MAAD,CAAY,CAC5B,mBACE,YAAI,SAAS,CAAC,MAAd,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,UAAf,CAA0B,GAAG,CAAEA,MAAM,CAACC,GAAtC,EADF,cAEE,oBAAKD,MAAM,CAACE,IAAZ,EAFF,GADF,cAKE,qBAAIF,MAAM,CAACG,GAAX,gBALF,cAME,UAAG,SAAS,CAAC,WAAb,UAA0BH,MAAM,CAACI,IAAjC,EANF,GADF,CAUD,CAXM,CAAP,CAYD,CAbD,CAcA;AACA,mBACE,oBACGN,UAAU,EADb,EADF,CAKH,CAvBD,CAyBA,cAAeF,CAAAA,IAAf,CAEA","sourcesContent":["import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { IState as IProps} from \"../App\"\r\n\r\nconst List: React.FC<IProps> = ({people}) => {\r\n  //we're trying to get the program to return the jsx components rather than having the jsx generated in the app.tsx file\r\n\r\n    const renderList = (): JSX.Element[] => {\r\n      return people.map((person) => {\r\n        return (\r\n          <li className=\"List\">\r\n            <div className=\"List-header\">\r\n              <img className=\"List-img\" src={person.img} />\r\n              <h2>{person.name}</h2>\r\n            </div>\r\n            <p>{person.age} years old</p>\r\n            <p className=\"List-note\">{person.note}</p>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n    // so it looks like you can have functions local to this const\r\n    return (\r\n      <ul>\r\n        {renderList()}\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n//TODO: https://youtu.be/jrKcJxF0lAU?t=2438"]},"metadata":{},"sourceType":"module"}