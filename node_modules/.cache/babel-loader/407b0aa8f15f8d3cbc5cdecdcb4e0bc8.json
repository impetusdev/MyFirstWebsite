{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\TypeScript\\\\MyFirstWebsite\\\\src\\\\testClass.tsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [number, setNumber] = useState(5);\nexport class Test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.increment = amt => {\n      this.setState(state => ({\n        count: state.count + amt\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => this.increment(1),\n      children: [this.props.message, \" \", this.state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/repos/TypeScript/MyFirstWebsite/src/testClass.tsx"],"names":["React","useState","number","setNumber","Test","Component","state","count","increment","amt","setState","render","props","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAK,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,CAAD,CAAnC;AAEA,OAAO,MAAMG,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAsE;AAAA;AAAA;AAAA,SACzEC,KADyE,GACjE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADiE;;AAAA,SASzEC,SATyE,GAS5DC,GAAD,IAAiB;AACzB,WAAKC,QAAL,CAAeJ,KAAD,KAAY;AACtBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcE;AADC,OAAZ,CAAd;AAGH,KAbwE;AAAA;;AAEzEE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKH,SAAL,CAAe,CAAf,CAApB;AAAA,iBACK,KAAKI,KAAL,CAAWC,OADhB,OAC0B,KAAKP,KAAL,CAAWC,KADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AARwE","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst[number, setNumber] = useState(5)\r\n\r\nexport class Test extends React.Component<{message: string}, {count: number}>{\r\n    state = {count: 0}\r\n    render(){\r\n        return (\r\n            <div onClick={() => this.increment(1)}>\r\n                {this.props.message} {this.state.count}\r\n            </div>\r\n        );\r\n    }\r\n    increment = (amt: number) => {\r\n        this.setState((state) => ({\r\n            count: state.count + amt,\r\n        }));\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}